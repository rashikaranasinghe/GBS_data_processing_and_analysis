{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red251\green0\blue7;}
{\*\expandedcolortbl;;\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c12195\c0;}
\margl1440\margr1440\vieww20760\viewh13180\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
### This file was created by Rashika W. Ranasinge.\
### This file contains scripts used in the following paper titled:\
\'93Cryptic Hybridization Dynamics in a Three-Way Hybrid Zone of Dinopium Flamebacks on a Tropical Island\'94\
\
### This file includes the raw Genotype-by-Sequencing (GBS) data processing pipeline, admixture mapping, the construction of a maximum likelihood tree using Treemix, and the generation of a maximum-clade-credibility tree with SNAPP.\
\
\
##################################################################### \
#################### GBS data processing ############################\
#####################################################################\
\
### NOTES:\
# I used the custom scripts available at https://doi.org/10.5061/dryad.4j2662g, a resource provided by Irwin et al., (2018)\
# In the preprint: Rashika Ransinghe, Sampath Seneviratne, Darren Irwin. Cryptic Hybridization Dynamics in a Three-Way Hybrid Zone of Dinopium Flamebacks on a Tropical Island. Authorea. August 27, 2024.
DOI: 10.22541/au.172473082.25943185/v1 Registration in progress, we processed three GBS plates. This script includes the data processing for only one GBS plate.\
\
############ 1. Demultiplexing ###########\
\
# Make folders to keep things tidy and clean.\
mkdir tools\
mkdir extras\
mkdir clean_data\
\
### Make the list of barcodes and sample name file\
\
cat > extras/barcodes_woodpeckers_RR_GBS3.txt\
-------------------\
UC20RR08	ACGG\
UC12RR01	CATCG\
UC12RR02	TGTGCA\
UE07RR02	GTACGT\
UC31RR01	GGTAGCA\
UE07RR04	AATTGCG\
UC20RR02	AGAATGCA\
No_barcode-UF02SS04 	AGTGACAA\
--------ctrl+D-----------\
\
\
## Demultiplex the data\
# For this, we utilized the custom Perl script used in Irwin et al. (2018) (GBS_demultiplexer_30base.pl) which is remained as GBS_demultiplexer_LN_RR.pl here.\
\
screen -S demultiplex\
\pard\pardeftab720\partightenfactor0
\cf3 perl tools/GBS_demultiplexer_LN_RR.pl extras/barcodes_woodpeckers_RR_GBS3.txt rawGBSreads/****.fastq rawGBSreads/**.fastq clean_data/GBS5\cf2 \
\
\
\
############ 2. Trimming ###########\
\
# make a directory to save trimmed data\
mkdir clean_data_trim/\
\
# make a list of individuals\
awk '\{print "GBS3_\'94$1\}' extras/barcodes_woodpeckers_RR_GBS3.txt > extras/prefix.list.woodpeckers_RR_GBS3.bwa\
\
# make the trimming script\
\
cat > trim_GBS3.sh\
-------------------\
#!/bin/bash\
#script to trim data with trimmomatic\
#usage ./trim_GBS3.sh\
\
while read prefix\
\
do\
\
java -jar tools/Trimmomatic-0.32/trimmomatic-0.32.jar PE -phred33 -threads 1 clean_data/"$prefix"_R1.fastq clean_data/"$prefix"_R2.fastq clean_data_trim/"$prefix"_R1.fastq clean_data_trim/"$prefix"_R1_unpaired.fastq clean_data_trim/"$prefix"_R2.fastq clean_data_trim/"$prefix"_R2_unpaired.fastq TRAILING:3 SLIDINGWINDOW:4:10 MINLEN:30\
\
done < eextras/prefix.list.woodpeckers_RR_GBS3.bwa\
---------ctrl+D-----------\
\
chmod 755 trim_GBS3.sh # to make the script executable \
screen -r Trimming\
./trim_GBS3.sh # to run the script \
\
\
############ 3. Align the sequence data to a reference genome ###########\
\
# align the reads to the Downy woodpecker (Picoides pubescens) reference genome (NCBI Assembly: https://www.ncbi.nlm.nih.gov/assembly/GCA_014839835.1). \
# To expedite alignment, subset the sample list and run the alignment separately for each subset.\
\
# make the necessary directories to save output files \
\
mkdir sam_2022\
mkdir bam_2022\
mkdir logs_2022\
 \
# Index the reference genome \
bwa index ref/GCA_014839835.1_bDryPub1.pri_genomic.fa \
samtools faidx ref/GCA_014839835.1_bDryPub1.pri_genomic.fa\
\
\
# Make the aligning script \
cat > Downy_chrom_align.2022.sh   #then paste text below  (ctrl-d to finish)\
-----------\
#!/bin/bash\
#script to align data with bwa, combine se and pe data with samtools and add RG for GATK\
# make sure these folders exist\
clean_data="clean_data_trim"\
sam="sam_2022"\
bam="bam_2022"\
log="logs_2022"\
\
lane="woodpeckers_LN_RR"  \
runbarcode="woodpeckers_LN_RR" \
\
\
# tell it where the executables are\
bwa="/Linux/bin/bwa-0.7.10"\
picard="tools/picard-tools-1.97"\
samtools="/Linux/bin/samtools"\
\
while read prefix\
do\
\
## run bwa\
$bwa mem -M ref/GCA_014839835.1_bDryPub1.pri_genomic.fa $clean_data/"$prefix"_R1.fastq $clean_data/"$prefix"_R2.fastq > $sam/"$prefix".sam\
$bwa mem -M ref/GCA_014839835.1_bDryPub1.pri_genomic.fa $clean_data/"$prefix"_R1_unpaired.fastq > $sam/"$prefix".R1.unpaired.sam\
$bwa mem -M ref/GCA_014839835.1_bDryPub1.pri_genomic.fa $clean_data/"$prefix"_R2_unpaired.fastq > $sam/"$prefix".R2.unpaired.sam\
\
## add read group headers, convert to bam, sort and index\
java -Xmx2g -jar $picard/AddOrReplaceReadGroups.jar I=$sam/"$prefix".sam O=$bam/"$prefix".bam RGID=$lane RGPL=ILLUMINA RGLB=LIB."$prefix" RGSM="$prefix" RGPU=$runbarcode SORT_ORDER=coordinate CREATE_INDEX=TRUE\
java -Xmx2g -jar $picard/AddOrReplaceReadGroups.jar I=$sam/"$prefix".R1.unpaired.sam O=$bam/"$prefix".R1.unpaired.bam RGID=$lane RGPL=ILLUMINA RGLB=LIB."$prefix" RGSM="$prefix" RGPU=$runbarcode SORT_ORDER=coordinate CREATE_INDEX=TRUE\
java -Xmx2g -jar $picard/AddOrReplaceReadGroups.jar I=$sam/"$prefix".R2.unpaired.sam O=$bam/"$prefix".R2.unpaired.bam RGID=$lane RGPL=ILLUMINA RGLB=LIB."$prefix" RGSM="$prefix" RGPU=$runbarcode SORT_ORDER=coordinate CREATE_INDEX=TRUE\
\
## merge se and pe bam files with samtools and index\
$samtools merge $bam/"$prefix".combo.bam $bam/"$prefix".bam $bam/"$prefix".R1.unpaired.bam $bam/"$prefix".R2.unpaired.bam\
$samtools index $bam/"$prefix".combo.bam\
\
done < extras/prefix.list.woodpeckers_RR_GBS3.bwa\
-----ctrl+D------\
\
screen -S DW_chrom_aligning	 #open a new screen\
chmod 755 Downy_chrom_align.2022.sh 		# make executable\
./Downy_chrom_align.2022.sh				#this runs the script for alignment\
\
\
\
############ 4. Haplotype Calling ###########\
\
# To speed up this step, subset the sample list and run the script separately for each subset.\
\
## Making .dict file for the reference \
java -jar tools/picard-tools-1.97/CreateSequenceDictionary.jar REFERENCE= ref/GCA_014839835.1_bDryPub1.pri_genomic.fa OUTPUT= ref/GCA_014839835.1_bDryPub1.pri_genomic.dict\
\
## make the necessary directories to save output files \
mkdir gvcf_DW.chrom_2022 \
\
## setting up the script to call the haplotypes \
\
cat > call_snp_DW.chrom5.sh \'a0 #then paste text (do necessary changes) \'a0(ctrl D to finish)\
-----------\
#!/bin/bash\
\
while read prefix\
do\
\
## make gvcfs\
java -jar /Linux/GATK-3.8/GenomeAnalysisTK.jar -T HaplotypeCaller -R ref/GCA_014839835.1_bDryPub1.pri_genomic.fa -I bam_2022/"$prefix".combo.bam --emitRefConfidence GVCF -o gvcf_DW.chrom_2022/$prefix".g.vcf\
\
done < extras/prefix.list.woodpeckers_RR_GBS3.bwa\
---------------------\
\
chmod 755 call_snp_DW.chrom5.sh ## make executable\
screen -S haplotypecalling  ## to open a new screen. (ctrl+D to close the screen, ctrl+K to kill the screen)\
./call_snp_DW.chrom5.sh ## to run the above script\
\
# combine all the gvcf files to one file\
# Make new directories for combined samples\
\
mkdir combined_DW.chrom_2022_vcfs\
mkdir combined_DW.chrom_2022_vcfs_logs\
\
# Create a prefix list with the samples that need to be combined\
ls -o gvcf_DW.chrom_2022/*.g.vcf | awk '\{print "--variant "$8\}' > extras/DW_chrom_samples.gvcf.list\
\
# combine the files\
screen -S combine_gvcfs\
\
java -jar /Linux/GATK-3.8/GenomeAnalysisTK.jar -T GenotypeGVCFs -R ref/GCA_014839835.1_bDryPub1.pri_genomic.fa  -l INFO -V extras/DW_chrom_samples.gvcf.list -o combined_DW.chrom_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.vcf -log  combined_DW.chrom_2022_vcfs_logs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.log\
\
\
\
\
############ 5. Filter the combined vcf file ###########\
\
# Remove indels and SNPs with more than two alleles\
\
vcftools --vcf combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.vcf --remove-indels --max-alleles 2 --recode --recode-INFO-all --out combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
After filtering, kept 150 out of 150 Individuals\
Outputting VCF file...\
After filtering, kept 6355209 out of a possible 7691114 Sites\
Run Time = 2646.00 seconds\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
# now filter out some questionable loci using GATK:\
\
java -jar /Linux/GATK-3.8/GenomeAnalysisTK.jar -T VariantFiltration -R ref/GCA_014839835.1_bDryPub1.pri_genomic.fa -V combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.recode.vcf --filterExpression "QD < 2.0 || MQ < 40.0 || FS > 60.0 || SOR > 3.0 || ReadPosRankSum < -8.0" --filterName "GATK_rec_filters" --setFilteredGtToNocall -o combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.vcf\
\
\
\
# The above flags the variants that PASS or don't. Now actually remove the ones that don't:\
\
java -jar /Linux/GATK-3.8/GenomeAnalysisTK.jar -T SelectVariants -R ref/GCA_014839835.1_bDryPub1.pri_genomic.fa -V combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.vcf --excludeFiltered -o combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.excluded.vcf\
\
\
# Remove sites with more than 60% missing genotypes (note the parameter below is intuition times minus one):\
\
vcftools --vcf combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.vcf --max-missing 0.4 --mac 3 --recode --recode-INFO-all --out combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.maxmiss60.mac3\
\'97\'97\'97\'97\'97\'97\'97\'97\
After filtering, kept 150 out of 150 Individuals\
Outputting VCF file...\
After filtering, kept 1480521 out of a possible 6355209 Sites\
Run Time = 846.00 seconds\
\'97\'97\'97\'97\'97\'97\'97\
\
\
###  filter this file for individual and SNP sites for missing data here.\
\
##### Filter out individuals that have missing data >= 70%\
\
## get the proportion of missing data for each individual\
vcftools --vcf combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.maxmiss60.mac3.recode.vcf --missing-indv\
cat out.imiss\
\
# make a list of individuals that have missing data > 70%\
awk '$5 > 0.7' out.imiss | cut -f1 > ind.70miss.list\
\
# remove those individuals from the vcf file\
vcftools --vcf combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.maxmiss60.mac3.recode.vcf --remove ind.70miss.list --recode --recode-INFO-all --out combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.maxmiss60.mac3.70pcntIndMiss\
-------------\
Excluding individuals in 'exclude' list\
After filtering, kept 114 out of 150 Individuals\
Outputting VCF file...\
After filtering, kept 1480521 out of a possible 1480521 Sites\
Run Time = 548.00 seconds\
-------------\
\
\
#### Filter out the SNPs that have missing data >= 30%\
\
# quantify the proportion of missing data for each SNP\
vcftools --vcf combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.maxmiss60.mac3.70pcntIndMiss.recode.vcf --missing-site \
\
# make a list of SNPs' locations with missing data > 30%\
cat out.lmiss | awk '$6 > 0.3' | cut -f1,2 >> SNP.30pcnt.miss.list\
\
# Filter out the SNPs that has higher missing data \
vcftools --vcf combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.maxmiss60.mac3.70pcntIndMiss.recode.vcf --exclude-positions SNP.30pcnt.miss.list --recode --recode-INFO-all --out combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.maxmiss60.mac3.70pcntIndMiss.SNP30miss\
-------------\
After filtering, kept 114 out of 114 Individuals\
Outputting VCF file...\
After filtering, kept 1251422 out of a possible 1480521 Sites\
Run Time = 451.00 seconds\
------------\
\
# Convert to tab file in 012NA format (run two commands below):\
vcftools --vcf combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.maxmiss60.mac3.70pcntIndMiss.SNP30miss.recode.vcf --012 --out combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.maxmiss60.mac3.70pcntIndMiss.SNP30miss.tab\
---------------\
After filtering, kept 114 out of 114 Individuals\
Writing 012 matrix files ... Done.\
After filtering, kept 1251422 out of a possible 1251422 Sites\
Run Time = 38.00 seconds\
----------------\
\
cat combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.maxmiss60.mac3.70pcntIndMiss.SNP30miss.tab.012 | sed 's/-1/NA/g' >  combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.maxmiss60.mac3.70pcntIndMiss.SNP30miss.tab.012NA\
\
\
## Above lines will produce 3 files (*.012NA, *.indv, and *.pos files) which we will then import into R and analyze further\
\
#type this on the terminal of your computer. This will import .tab file into 012NA_file folder in your computer\
\
scp ranasinghe@files.zoology.ubc.ca:flex/DinopiumGBS/combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.noIndels_biallelic.GATKfiltered.maxmiss60.mac3.70pcntIndMiss.SNP30miss.tab.012* /Users/rashikaranasinghe/Documents/Dinopium_GBS_on_laptop/012NA_150_samples\
\
\
# The remaining analyses were performed in RStudio. Please refer to Flameback_GBS_analysis_script.R.\
\
##################################################################### \
################ END GBS data processing ############################\
#####################################################################\
\
\
\
##################################################################### \
###################### Admixture mapping ############################\
#####################################################################\
# This pipeline is utilized to analyze the genomic ancestry of each individual by calculating admixture proportions using ADMIXTURE 1.3.0 (Alexander & Lange, 2011).

### Filter individuals and SNPs #####

### make the list of individuals that should be included in the PCA  (n=108)
cat > extras/PCA.Dino.ind.108.list
----------------------
woodpeckers_LN_RR_MD18SS03_Dino_R
woodpeckers_LN_RR_MH29SF02_Dino_H
woodpeckers_LN_RR_MH31SF01_Dino_R
woodpeckers_LN_RR_MH31SF02_Dino_R
woodpeckers_LN_RR_MI05SF04_Dino_R
woodpeckers_LN_RR_MI10SS01_Dino_Y
woodpeckers_LN_RR_MI10SS04_Dino_Y
woodpeckers_LN_RR_MI11SS01_Dino_Y
woodpeckers_LN_RR_MI19SF01_Dino_R
woodpeckers_LN_RR_MI19SF04_Dino_R
woodpeckers_LN_RR_MK13SF02_Dino_R
woodpeckers_LN_RR_MK13SF03_Dino_R
woodpeckers_LN_RR_MK13SF04_Dino_R
woodpeckers_LN_RR_MK14SF01_Dino_R
woodpeckers_LN_RR_NC23SS02_Dino_Y
woodpeckers_LN_RR_PC06SS01_Dino_H
woodpeckers_LN_RR_PD02RWR02_Dino_Y
woodpeckers_LN_RR_PH24RWR02_Dino_R
woodpeckers_LN_RR__Dino_MF11SS01
woodpeckers_LN_RR__Dino_MG11SF01
woodpeckers_LN_RR__Dino_MG28SF01
woodpeckers_LN_RR__Dino_MH23SF01
woodpeckers_LN_RR__Dino_MH29SF04
woodpeckers_LN_RR__Dino_MH29SF06
woodpeckers_LN_RR__Dino_MI05SF03
woodpeckers_LN_RR__Dino_MI10SS02
woodpeckers_LN_RR__Dino_MI19SF03
woodpeckers_LN_RR__Dino_MI21SF04
woodpeckers_LN_RR__Dino_NC15SS01
woodpeckers_LN_RR__Dino_NC22SS01
woodpeckers_LN_RR__Dino_PD01RWR01
woodpeckers_LN_RR__Dino_PH24RWR01
woodpeckers_LN_RR__Dino_PH24RWR03
woodpeckers_LN_RR__Dino_PI11RWR01
woodpeckers_LN_RR__Dino_PI11RWR02
woodpeckers_LN_RR__Dino_PJ02SS01
woodpeckers_LN_RR__Dino_PJ02SS03
woodpeckers_LN_RR__Dino_QI05SS02
woodpeckers_LN_RR__Dino_QI05SS03
woodpeckers_LN_RR__Dino_QJ14SS01
woodpeckers_LN_RR__Dino_QJ14SS02
woodpeckers_RR_GBS3_MH29SF01
woodpeckers_RR_GBS3_MI21SF01
woodpeckers_RR_GBS3_NB17SS01
woodpeckers_RR_GBS3_NC23SS01
woodpeckers_RR_GBS3_QI05SS01
woodpeckers_RR_GBS3_UC12RR01
woodpeckers_RR_GBS3_UC12RR02
woodpeckers_RR_GBS3_UC12RR03
woodpeckers_RR_GBS3_UC14RR04
woodpeckers_RR_GBS3_UC19RR01
woodpeckers_RR_GBS3_UC19RR02
woodpeckers_RR_GBS3_UC19RR03
woodpeckers_RR_GBS3_UC19RR04
woodpeckers_RR_GBS3_UC20RR01
woodpeckers_RR_GBS3_UC20RR02
woodpeckers_RR_GBS3_UC20RR03
woodpeckers_RR_GBS3_UC20RR04
woodpeckers_RR_GBS3_UC20RR05
woodpeckers_RR_GBS3_UC20RR06
woodpeckers_RR_GBS3_UC20RR07
woodpeckers_RR_GBS3_UC26RR01
woodpeckers_RR_GBS3_UC27RR01
woodpeckers_RR_GBS3_UC27RR02
woodpeckers_RR_GBS3_UC28RR01
woodpeckers_RR_GBS3_UC28RR02
woodpeckers_RR_GBS3_UC29RR01
woodpeckers_RR_GBS3_UC29RR02
woodpeckers_RR_GBS3_UC29RR03
woodpeckers_RR_GBS3_UC29RR04
woodpeckers_RR_GBS3_UC30RR01
woodpeckers_RR_GBS3_UC30RR02
woodpeckers_RR_GBS3_UC30RR03
woodpeckers_RR_GBS3_UC30RR04
woodpeckers_RR_GBS3_UC31RR01
woodpeckers_RR_GBS3_UC31RR02
woodpeckers_RR_GBS3_UD16RR01
woodpeckers_RR_GBS3_UD23RR01
woodpeckers_RR_GBS3_UD30RR01
woodpeckers_RR_GBS3_UD30RR02
woodpeckers_RR_GBS3_UD30RR03
woodpeckers_RR_GBS3_UD30RR04
woodpeckers_RR_GBS3_UE01RR01
woodpeckers_RR_GBS3_UE01RR02
woodpeckers_RR_GBS3_UE01RR03
woodpeckers_RR_GBS3_UE01RR04
woodpeckers_RR_GBS3_UE02RR01
woodpeckers_RR_GBS3_UE02RR02
woodpeckers_RR_GBS3_UE02RR03
woodpeckers_RR_GBS3_UE07RR01
woodpeckers_RR_GBS3_UE07RR02
woodpeckers_RR_GBS3_UE07RR03
woodpeckers_RR_GBS3_UE07RR04
woodpeckers_RR_GBS3_UE07RR05
woodpeckers_RR_GBS3_UE09RR01
woodpeckers_RR_GBS3_UE09RR02
woodpeckers_RR_GBS3_UE09RR03
woodpeckers_RR_GBS3_UF01SS01
woodpeckers_RR_GBS3_UF01SS02
woodpeckers_RR_GBS3_UF01SS03
woodpeckers_RR_GBS3_UF01SS04
woodpeckers_RR_GBS3_UF01SS05
woodpeckers_RR_GBS3_UF02SS01
woodpeckers_RR_GBS3_UF02SS02
woodpeckers_RR_GBS3_UF02SS03
woodpeckers_RR_GBS3_UF02SS04
woodpeckers_RR_GBS3_UF03RR01
woodpeckers_RR_GBS3_UF03RR02
-----------------------

# Extract the genotype data for the individuals listed above and apply the following filters:
# I) Exclude inversions and deletions; (--remove-indels)
# II) Retain only biallelic data; (--min-alleles 2 --max-alleles 2)
# III) Remove SNPs with more than 60% missing data; (--max-missing 0.4)
# IV) Keep only high-quality genotype calls; (--minGQ 10)
# V) Include SNPs with a minor allele count; (--mac 3)

vcftools --vcf ../../combined_DW.chrom_150.N_2022_vcfs/DW.chrom_150.n_Oct.2022.genotypes.variant_only.whole_genome.vcf --keep ../../extras/PCA.Dino.ind.108.list --remove-indels  --min-alleles 2 --max-alleles 2 --max-missing 0.4 --minGQ 10 --mac 3 --recode --out DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3./
-------------
After filtering, kept 108 out of 150 Individuals
Outputting VCF file...
After filtering, kept 603761 out of a possible 7691114 Sites
Run Time = 751.00 seconds
-------------

###### Change the chromosome names 
cat DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3.recode.vcf | sed 's/CM025994.1/1/g;s/CM025995.1/2/g;s/CM025996.1/3/g;s/CM025997.1/4/g;s/CM025998.1/5/g;s/CM025999.1/6/g;s/CM026000.1/7/g;s/CM026001.1/8/g;s/CM026002.1/9/g;s/CM026003.1/10/g;s/CM026004.1/11/g;s/CM026005.1/12/g;s/CM026006.1/13/g;s/CM026007.1/14/g;s/CM026008.1/15/g;s/CM026009.1/16/g;s/CM026010.1/17/g;s/CM026011.1/18/g;s/CM026012.1/19/g;s/CM026013.1/20/g;s/CM026014.1/21/g;s/CM026015.1/22/g;s/CM026016.1/23/g;s/CM026017.1/24/g;s/CM026018.1/25/g;s/CM026019.1/26/g;s/CM026020.1/27/g;s/CM026021.1/28/g;s/CM026022.1/29/g;s/CM026023.1/30/g;s/CM026024.1/31/g;s/CM026025.1/32/g;s/CM026026.1/33/g;s/CM026027.1/34/g;s/CM026028.1/35/g;s/CM026029.1/36/g;s/CM026030.1/37/g;s/CM026031.1/38/g;s/CM026032.1/39/g;s/CM026033.1/40/g;s/CM026034.1/41/g;s/CM026035.1/42/g;s/CM026036.1/43/g;s/CM026037.1/44/g;s/CM026038.1/W/g;s/CM026039.1/Z/g' > DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3.chromedited.recode.vcf 

###### Make .bed file
vcftools --vcf DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3.recode.vcf --plink --out DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3
--------------
Done.
After filtering, kept 603761 out of a possible 603761 Sites
Run Time = 36.00 seconds
---------------

###### Change the chromosome number in .map file
perl ../changeid.pl DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3.map > DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3.new.map

########## Change map file names
mv DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3.map DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3.withoutChromEdited.map
mv DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3.new.map DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3.map

######## Trim on LD
/Linux/bin/plink_1.9 --file DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3 --indep-pairwise 50 10 0.1 --allow-no-sex --allow-extra-chr --out DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3.LDtrim
------------------------
Calculating allele frequencies... done.
Total genotyping rate is 0.751874.
603761 variants and 108 people pass filters and QC.
Note: No phenotypes present.
Pruned 405019 variants from chromosome 1, leaving 198742.
Pruning complete.  405019 of 603761 variants removed.
------------------------

########## Make bed file with pruned SNPs
/Linux/bin/plink_1.9 --file DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3 --extract DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3.LDtrim.prune.in --allow-no-sex --allow-extra-chr 0 --make-bed --out DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3.LDtrim
------------------
Calculating allele frequencies... done.
Total genotyping rate is 0.775261.
198742 variants and 108 people pass filters and QC.
-------------------


############ Run admixture
cat > admixture_chrom.DW.n108.in.PCA.sh
——————————
!#bin/bash
for K in 2 3 4 5; do ../../ADMIXTURE/tools/admixture_linux-1.3.0/admixture --cv=10 -s time -j10 -C 0.0000000001 DW.chrom_150.n_Nov.2022.wholegenome.variantonlyPCA.108.ind.noIndels.biallelic.maxmiss0.4.minGQ10.mac3.LDtrim.bed $K|tee log${K}.out ;done
———— ctrl + D 

chmod 755 admixture_chrom.DW.n108.in.PCA.sh
 screen -S admixture
./admixture_chrom.DW.n108.in.PCA.sh



########### Get the K values 
------------------
CV error (K=2): 0.48773
CV error (K=3): 0.50976
CV error (K=4): 0.53912
CV error (K=5): 0.57078
------------------

# Downloaded the output files and visualized the data in R Studio. For details on the data visualization process, please refer to the Flameback_GBS_analysis_script.R script.

##################################################################### \
################### END Admixture mapping ###########################\
#####################################################################\
\
\
### This file includes the raw Genotype-by-Sequencing (GBS) data processing pipeline, admixture mapping, the construction of a maximum likelihood tree using Treemix, and the generation of a maximum-clade-credibility tree with SNAPP.\
\cf3 \
\
\
\
\
\
}
